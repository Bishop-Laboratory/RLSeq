as_tibble(configs) %>%
unique()
rmapSamps
which(configs$experiment %in% rmapSamps$id)
which(@ configs$experiment %in% rmapSamps$id)
which(! configs$experiment %in% rmapSamps$id)
configs$experiment[which(! configs$experiment %in% rmapSamps$id & ! configs$experiment %in% rmapSamps$control)]
which(rmapSamps$id %in% configs$experiment)
which(! rmapSamps$id %in% configs$experiment)
configs$run
configs$run %>% View()
configs$run %>% as_tibble() %>% View()
as_tibble(configs) %>%
unique() %>%  View()
dd <- RSeqR::rmapSamps %>%
select(experiment = id,
control,
mode,
genome)
table(dd$mode)
RSeqR::rmapSamps %>%
select(experiment = id,
control,
mode,
genome) %>%
filter(mode %in% c("bisDRIP", "SMRF")) %>%
write_csv("data-raw/RMapDB_generate/samples.csv")
# 2. Build config.json (with activated conda env if needed)
system("RSeqCLI build -o data-raw/RMapDB_generate/ data-raw/RMapDB_generate/samples.csv")
# 1. rmapSamps needed to be wrangled for RSeqCLI
dir.create("data-raw/RMapDB_generate/", showWarnings = FALSE)
RSeqR::rmapSamps %>%
select(experiment = id,
control,
mode,
genome) %>%
filter(! mode %in% c("bisDRIP", "SMRF")) %>%
write_csv("data-raw/RMapDB_generate/samples.csv")
# 3. Check the JSON
configs <- jsonlite::read_json("data-raw/RMapDB_generate/config.json", simplifyVector = TRUE)
configs
as_tibble(configs) %>%
unique() %>%  View()
# Fix naming issues
list.files(path = "data-raw/RMapDB_generate/bams/")
# Fix naming issues
list.files(path = "data-raw/RMapDB_generate/bams/")
# Fix naming issues
fls <- list.files(path = "data-raw/RMapDB_generate/bams/")
# Fix naming issues
RSeqR::rmapSamps %>%
select(experiment = id,
control,
mode,
genome)
# Fix naming issues
rmap <- RSeqR::rmapSamps %>%
select(experiment = id,
control,
mode,
genome)
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble()
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
pivot_wider(toFlip, id_cols = id, names_from = cond, values_from = id)
pivot_wider(toFlip, id_cols = id, names_from = cond, values_from = id, values_fill = NA)
pivot_wider(toFlip, id_cols = id, names_from = cond, values_from = id, values_fill = NA) %>%
unnest()
pivot_wider(toFlip, id_cols = id, names_from = cond, values_from = id, values_fill = NA) %>%
unnest(keep_empty = T)
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
print(i)
}))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
.data$cond[i,]
}))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
.data$cond[i]
}))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
.$cond[i]
}))
cond <- .data$cond[i]
id <- .data$id[i]
i <- 1
rmap$control
rmap$experiment
rmap$id
cond <- .data$cond[i]
id <- .data$id[i]
cond
.data
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$id[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$id[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
View(toFlip)
View(toFlip)
# Fix naming issues
rmap <- RSeqR::rmapSamps %>%
select(experiment = id,
control,
mode,
genome)
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$id[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
toFlip
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$id[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(id = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$id[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
left_join(rmap, toFlip, by=c("id" = "realID"))
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$id[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
left_join(rmap, toFlip, by=c("id" = "realID"))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(id), function(i) {
cond <- .data$cond[i]
id <- .data$idOrig[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(idOrig), function(i) {
cond <- .data$cond[i]
id <- .data$idOrig[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
toFlip
left_join(rmap, toFlip, by=c("id" = "realID"))
rmap
left_join(rmap, toFlip, by=c("experiment" = "realID"))
left_join(rmap, toFlip, by=c("experiment" = "realID")) -> dd
View(dd)
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\3"))
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
dd <-  list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
dd$genome
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(idOrig), function(i) {
cond <- .data$cond[i]
id <- .data$idOrig[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
left_join(rmap, toFlip, by=c("experiment" = "realID")) -> dd
View(dd)
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) -> dd
View(dd)
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam"))
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) -> dd
View(dd)
message(i, "/", seq(experiment))
i <- 1
message(i, "/", seq(.data$experiment))
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
map(seq(experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
map(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
map(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
file.rename(oldName, newName)
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
map(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
# file.rename(oldName, newName)
NULL
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
lapply(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
# file.rename(oldName, newName)
NULL
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
lapply(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
# file.rename(oldName, newName)
NULL
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
lapply(seq(.$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
# file.rename(oldName, newName)
NULL
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
map_chr(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
# file.rename(oldName, newName)
NULL
})
# file.rename(oldName, newName)
print("ASD")
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) %>%
map_chr(seq(.data$experiment), function(i) {
message(i, "/", seq(.data$experiment))
oldName <- .data$oldName[i]
newName <- .data$newName[i]
# file.rename(oldName, newName)
print("ASD")
})
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome")) %>%
mutate(oldName = paste0("data-raw/RMapDB_generate/bams/", value),
newName = paste0("data-raw/RMapDB_generate/bams/", experiment, "_", genome, ".bam")) -> dd
lapply(seq(dd$experiment), function(i) {
message(i, "/", seq(dd$experiment))
oldName <- dd$oldName[i]
newName <- dd$newName[i]
# file.rename(oldName, newName)
print("ASD")
})
lapply(seq(dd$experiment), function(i) {
message(i, "/", length(dd$experiment))
oldName <- dd$oldName[i]
newName <- dd$newName[i]
# file.rename(oldName, newName)
print("ASD")
})
lapply(seq(dd$experiment), function(i) {
message(i, "/", length(dd$experiment))
oldName <- dd$oldName[i]
newName <- dd$newName[i]
# file.rename(oldName, newName)
print(paste0(oldName,  ' ->  ', newName))
})
lapply(seq(dd$experiment), function(i) {
message(i, "/", length(dd$experiment))
oldName <- dd$oldName[i]
newName <- dd$newName[i]
file.rename(oldName, newName)
print(paste0(oldName,  ' ->  ', newName))
})
list.files(path = "data-raw/RMapDB_generate/bams/") %>%
as_tibble()
list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+")
list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
View(rmap)
# still some to fix
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(idOrig), function(i) {
cond <- .data$cond[i]
id <- .data$idOrig[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
toFlip
me to fix
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
toFlip
list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2"))
# still some to fix
toFlip <- list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+") %>%
as_tibble() %>%
mutate(idOrig = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\1"),
cond = gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([experimentcontrol]+)\\.bam", replacement = "\\2"),
genome =  gsub(value, pattern = "([ES]{1}RX[0-9]+)_.+\\.([a-zA-Z0-9]+)\\.([experimentcontrol]+)\\.bam", replacement = "\\2")) %>%
mutate(realID = map_chr(seq(idOrig), function(i) {
cond <- .data$cond[i]
id <- .data$idOrig[i]
ifelse(cond == "experiment", id, rmap$control[rmap$experiment == id])
}))
View(toFlip)
left_join(rmap, toFlip, by=c("experiment" = "realID", "genome"))
inner_join(rmap, toFlip, by=c("experiment" = "realID", "genome"))
right_join(rmap, toFlip, by=c("experiment" = "realID"))
# still some to fix
toDel <- list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+")
toDel
# still some to fix
toDel <- list.files(path = "data-raw/RMapDB_generate/bams/", pattern = ".+_.+_.+", full.names = TRUE)
file.remove(toDel)
list.files(path = "data-raw/RMapDB_generate/bams/")
rmap
reticulate::repl_python()
setwd("~/projects/RSeq/tests")
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
outjson
reticulate::repl_python()
setwd("~/projects/RSeqR")
# Move files again...
list.files("data-raw/RMapDB_generate/bam/")
# Move files again...
fs <- list.files("data-raw/RMapDB_generate/bam/")
print(fn)
# Move files again...
fs <- list.files("data-raw/RMapDB_generate/bam/")
sapply(fs, function(fn) {
print(fn)
})
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
})
# Move files again...
BAMDIR <- "data-raw/RMapDB_generate/bam/"
fs <- list.files(BAMDIR)
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
})
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
mkdir <- file.path(BAMDIR, id)
})
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
mkdir <- file.path(BAMDIR, id)
dir.create(mkdir, showWarnings = FALSE)
})
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
mkdir <- file.path(BAMDIR, id)
dir.create(mkdir, showWarnings = FALSE)
nfn <- file.path(mkdir, fn)
# file.rename(fn, )
})
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
mkdir <- file.path(BAMDIR, id)
dir.create(mkdir, showWarnings = FALSE)
nfn <- file.path(mkdir, fn)
file.rename(fn, nfn)
})
warnings()
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
mkdir <- file.path(BAMDIR, id)
dir.create(mkdir, showWarnings = FALSE)
nfn <- file.path(mkdir, fn)
ofn <- file.path(BAMDIR, fn)
# file.rename(, nfn)
})
sapply(fs, function(fn) {
id <- gsub(fn, pattern = "(.+)_.+", replacement = "\\1")
mkdir <- file.path(BAMDIR, id)
dir.create(mkdir, showWarnings = FALSE)
nfn <- file.path(mkdir, fn)
ofn <- file.path(BAMDIR, fn)
file.rename(ofn, nfn)
})
tibble(
experiment = "SRX1025890_hg38.bam",
control = "SRX1025893_hg38.bam"
) %>% write_csv("../RSeq/tests/test_data/bam_test_samples_1.csv")
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
