% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RLSeq.R
\name{RLSeq}
\alias{RLSeq}
\title{Run RLSeq}
\usage{
RLSeq(object, quiet = FALSE, ...)
}
\arguments{
\item{object}{An RLRanges object.}

\item{quiet}{If TRUE, messages are suppressed. Default: FALSE.}

\item{...}{Arguments passed to analyzeRLFS. See \link{analyzeRLFS}.}
}
\value{
An RLRanges object with all results available.
}
\description{
Runs the full RLSeq pipeline.
}
\details{
The \code{RLSeq()} function does all of the following:

\enumerate{
\item RLFS Perm Test. Runs the \code{analyzeRLFS()} function to test the
enrichment of user-supplied ranges within R-loop-forming sequences.
\item Predict Condition. Runs the \code{predictCondition()} function to
predict whether the user-supplied sample robustly maps R-loops or not.
\item Feature enrichment test. Runs the \code{featureEnrich()} function to
test the enrichment of user-supplied ranges within R-loop-relevant genomic features.
\item Correlation Analysis. Runs the \code{corrAnalyze()} function to test
the correlation of user-supplied R-loop signal with other samples in RLBase around
"gold-standard" R-loop regions.
\item Gene annotation. Runs the \code{geneAnnotation()} function to find the overlap
of genes with the user-supplied ranges.
\item R-loop Region Analysis. Runs the \code{rlRegionTest()} function to find
the overlap of user-supplied ranges with consensus R-loop sites (RL-Regions).
}
}
\examples{

# Example RLRanges
rlr <- readRDS(system.file("ext-data", "rlrsmall.rds", package = "RLSeq"))

# Run RLSeq
# `useMask=FALSE` & `ntime=10` for demonstration purposes only.
# For an accurate analysis, use `rlr <- RLSeq(rlr)`
rlr <- RLSeq(rlr, useMask = FALSE, ntimes = 10)
}
